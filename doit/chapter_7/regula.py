# 정규식 표현 방법

############### [] : [] 사이 문자들과 매치 ###############
# ex) [a,b,c]일때 

# a = 'a'와 매칭 됨
# before = 'b'와 매칭 됨
# dude = a,b,c 어느것도 매칭 되지 않음

############### [-] : form ~ to : a부터 b까지 ###############
# [a-c] = [a,b,c]
# [0-9] = [0,1,2,3,4,5,6,7,8,9] # (숫자전체)
# [a-zA-Z] = 알파벳소/대문자 전체

############### [^] : 부정 (정규식 앞에 붙여준다 )###############
# [^0-9]  = [0,1,2,3,4,5,6,7,8,9] 제외한 문자

############### 자주 사용하는 문자 클래스 ###############
# \d = [0-9]            <->      \D  = [^0-9]           # 숫자
# \s = [\t\n\r\f\v]     <->      \S  = [^\t\n\r\f\v]    # whitespace
# \w = [a-zA-Z0-9_]     <->      \W  = [^a-zA-Z0-9_]    # 문자+숫자

############### . : 모든 문자(줄바꿈(\n)문자 제외) ###############
# ex) a.b 일때

# aab = ab사이에 a 이므로 매칭됨
# a0b = ab사이에 0 이므로 매칭
# abc = ab사이에 어떠한 문자도 없으므로 매칭 되지않음


############### * : 앞에문자 0번이상 반복 ###############
# ex) ca*t 일때

# ct  = a가 0번 반복 매칭됨
# cat = a가 1번 반복 매칭됨.
# caaat = a가 3번 반복 매칭됨


############### + : 앞에문자 1번 이상 ###############
# ex) ca*t 일때

# ct  = a가 0번 반복 . 매칭되지않음
# cat = a가 1번이상 반복 매칭됨
# caaat = a가 1번이상 반복 매칭됨

############### + : 앞에문자 1번 이상 ###############
# ex) ca*t 일때

# ct  = a가 0번 반복 . 매칭되지않음
# cat = a가 1번이상 반복 매칭됨
# caaat = a가 1번이상 반복 매칭됨

############### {m,n} : m번이상 n 번이하 반복 (n기본 = 무한) ###############
# ex) ca{2}t 일때

# cat = a가 1번 반복. 2번이 안되므로 매칭되지 않음
# caat = a가 2번 반복. 매칭됨 (??????????)
# caaat = a가 3번 반복. 반복 매칭됨(?????)

# {0,} =  * 
# {1,} =  + 


############### ? : 있어도 되고 없어도 된다 ###############
# ex) ab?c 일때

# abc = 'b'가 있음 매칭됨
# ac = 'b'가 없음 매칭됨

# {0,1} = ? 

############### ^ : 문자열처음 ###############
# ex) ^python 일때

# python is good = python이 문자열 처음이므로 매칭됨
# is good pytho = is가 문자열 처음이므로 매칭안됨


############### $ : 문자열끝 ###############
# ex) python$ 일때

# python is good = good 문자열 끝이므로 매칭안됨
# is good python = pythondl 문자열 끝이므로 매칭됨










